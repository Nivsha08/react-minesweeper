{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst initCell = (row, column, isMine = false) => ({\n  row,\n  column,\n  isMine,\n  numberOfNeighborMines: 0,\n  flagged: false,\n  unknown: false\n});\n\nconst initGrid = (rows, columns, numberOfMines) => {\n  const grid = [];\n\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < columns; j++) {\n      grid[i][j] = initCell(i, j);\n    }\n  }\n\n  return grid;\n};\n\nexport const useGridState = gameConfig => {\n  _s();\n\n  const {\n    rows,\n    columns,\n    numberOfMines\n  } = gameConfig;\n  const [gameGrid, setGameGrid] = useState(initGrid(rows, columns, numberOfMines));\n  return {\n    gameGrid,\n    setGameGrid\n  };\n};\n\n_s(useGridState, \"2aKBBwXeDWUO2b+7kIJgN57w8HI=\");","map":{"version":3,"sources":["/Users/nivshani/Desktop/react-minesweeper/src/hooks/use-grid-state.ts"],"names":["useState","initCell","row","column","isMine","numberOfNeighborMines","flagged","unknown","initGrid","rows","columns","numberOfMines","grid","i","j","useGridState","gameConfig","gameGrid","setGameGrid"],"mappings":";;AACA,SAAQA,QAAR,QAAuB,OAAvB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAcC,MAAd,EAA8BC,MAAe,GAAG,KAAhD,MAAiE;AAC9EF,EAAAA,GAD8E;AAE9EC,EAAAA,MAF8E;AAG9EC,EAAAA,MAH8E;AAI9EC,EAAAA,qBAAqB,EAAE,CAJuD;AAK9EC,EAAAA,OAAO,EAAE,KALqE;AAM9EC,EAAAA,OAAO,EAAE;AANqE,CAAjE,CAAjB;;AASA,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAeC,OAAf,EAAgCC,aAAhC,KAAoE;AACjF,QAAMC,IAAc,GAAG,EAAvB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAApB,EAA0BI,CAAC,EAA3B,EAA+B;AAC3B,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAApB,EAA6BI,CAAC,EAA9B,EAAkC;AAC9BF,MAAAA,IAAI,CAACC,CAAD,CAAJ,CAAQC,CAAR,IAAab,QAAQ,CAACY,CAAD,EAAIC,CAAJ,CAArB;AACH;AACJ;;AAED,SAAOF,IAAP;AACH,CAVD;;AAYA,OAAO,MAAMG,YAAY,GAAIC,UAAD,IAAmC;AAAA;;AAC3D,QAAM;AAACP,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAiCK,UAAvC;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAWQ,QAAQ,CAACC,IAAD,EAAOC,OAAP,EAAgBC,aAAhB,CAAnB,CAAxC;AAEA,SAAO;AACHM,IAAAA,QADG;AAEHC,IAAAA;AAFG,GAAP;AAIH,CATM;;GAAMH,Y","sourcesContent":["import {Cell, GameConfiguration} from \"../types/types\";\nimport {useState} from \"react\";\n\nconst initCell = (row: number, column: number, isMine: boolean = false): Cell => ({\n    row,\n    column,\n    isMine,\n    numberOfNeighborMines: 0,\n    flagged: false,\n    unknown: false\n});\n\nconst initGrid = (rows: number, columns: number, numberOfMines: number): Cell[][] => {\n    const grid: Cell[][] = [];\n\n    for (let i = 0; i < rows; i++) {\n        for (let j = 0; j < columns; j++) {\n            grid[i][j] = initCell(i, j);\n        }\n    }\n\n    return grid;\n};\n\nexport const useGridState = (gameConfig: GameConfiguration) => {\n    const {rows, columns, numberOfMines} = gameConfig;\n\n    const [gameGrid, setGameGrid] = useState<Cell[][]>(initGrid(rows, columns, numberOfMines));\n\n    return {\n        gameGrid,\n        setGameGrid\n    }\n};"]},"metadata":{},"sourceType":"module"}