{"ast":null,"code":"var _jsxFileName = \"/Users/nivshani/Desktop/react-minesweeper/src/components/game-grid/game-grid.tsx\";\nimport React from 'react';\nimport styles from './game-grid.module.scss';\nimport { CELL_SIZE_PX } from \"../../constants\";\nimport { GridCell } from \"../grid-cell/grid-cell\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getGridStyle = (rows, columns) => ({\n  gridTemplateRows: `${CELL_SIZE_PX}px `.repeat(rows),\n  gridTemplateColumns: `${CELL_SIZE_PX}px `.repeat(columns)\n});\n\nexport const GameGrid = ({\n  configuration\n}) => {\n  const {\n    rows,\n    columns\n  } = configuration;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.gameGrid,\n    style: getGridStyle(rows, columns),\n    children: Array(rows).fill(null).map(e => Array(columns).fill(null).map((k, i) => /*#__PURE__*/_jsxDEV(GridCell, {}, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 28\n    }, this)))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n};\n_c = GameGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameGrid\");","map":{"version":3,"sources":["/Users/nivshani/Desktop/react-minesweeper/src/components/game-grid/game-grid.tsx"],"names":["React","styles","CELL_SIZE_PX","GridCell","getGridStyle","rows","columns","gridTemplateRows","repeat","gridTemplateColumns","GameGrid","configuration","gameGrid","Array","fill","map","e","k","i"],"mappings":";AAAA,OAAOA,KAAP,MAAmC,OAAnC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,SAAQC,YAAR,QAA2B,iBAA3B;AACA,SAAQC,QAAR,QAAuB,wBAAvB;;;AAMA,MAAMC,YAAY,GAAG,CAACC,IAAD,EAAeC,OAAf,MAAmD;AACpEC,EAAAA,gBAAgB,EAAG,GAAEL,YAAa,KAAhB,CAAqBM,MAArB,CAA4BH,IAA5B,CADkD;AAEpEI,EAAAA,mBAAmB,EAAG,GAAEP,YAAa,KAAhB,CAAqBM,MAArB,CAA4BF,OAA5B;AAF+C,CAAnD,CAArB;;AAKA,OAAO,MAAMI,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAoC;AACxD,QAAM;AAACN,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBK,aAAxB;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAEV,MAAM,CAACW,QAAvB;AAAiC,IAAA,KAAK,EAAER,YAAY,CAACC,IAAD,EAAOC,OAAP,CAApD;AAAA,cACFO,KAAK,CAACR,IAAD,CAAL,CAAYS,IAAZ,CAAiB,IAAjB,EAAuBC,GAAvB,CAA4BC,CAAD,IAAOH,KAAK,CAACP,OAAD,CAAL,CAAeQ,IAAf,CAAoB,IAApB,EAC9BC,GAD8B,CAC1B,CAACE,CAAD,EAAIC,CAAJ,kBAAU,QAAC,QAAD,MACUA,CADV;AAAA;AAAA;AAAA;AAAA,YADgB,CAAlC;AADE;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH,CARM;KAAMR,Q","sourcesContent":["import React, {CSSProperties} from 'react';\nimport styles from './game-grid.module.scss';\nimport {GameConfiguration} from \"../../types/types\";\nimport {CELL_SIZE_PX} from \"../../constants\";\nimport {GridCell} from \"../grid-cell/grid-cell\";\n\ntype GameGridProps = {\n    configuration: GameConfiguration;\n}\n\nconst getGridStyle = (rows: number, columns: number): CSSProperties => ({\n    gridTemplateRows: `${CELL_SIZE_PX}px `.repeat(rows),\n    gridTemplateColumns: `${CELL_SIZE_PX}px `.repeat(columns),\n});\n\nexport const GameGrid = ({configuration}: GameGridProps) => {\n    const {rows, columns} = configuration;\n\n    return <div className={styles.gameGrid} style={getGridStyle(rows, columns)}>\n        {Array(rows).fill(null).map((e) => Array(columns).fill(null)\n            .map((k, i) => <GridCell\n                                key={i} />))}\n    </div>\n};"]},"metadata":{},"sourceType":"module"}